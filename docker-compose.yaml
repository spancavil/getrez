services:
  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    # Command outside of the build
    command: pnpm run start:dev reservations
    ports:
      - '3000:3000'
    # Mount . to the container dir /user/src/app except node_modules and dist
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/reservations/.env
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    # Command outside of the build
    command: pnpm run start:dev auth
    ports:
      - '3001:3001'
    # Mount . to the container dir /user/src/app except node_modules and dist
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/auth/.env
  payments:
    build:
      context: .
      dockerfile: ./apps/payments/Dockerfile
      target: development
    # Command outside of the build
    command: pnpm run start:dev payments
    # we don't need to expose any ports because the ports are open over the internal network
    # Mount . to the container dir /user/src/app except node_modules and dist
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/payments/.env
  notifications:
    build:
      context: .
      dockerfile: ./apps/notifications/Dockerfile
      target: development
    # Command outside of the build
    command: pnpm run start:dev notifications
    # we don't need to expose any ports because the ports are open over the internal network

    # Mount . to the container dir /user/src/app except node_modules and dist
    volumes:
      - .:/usr/src/app
    env_file:
      - ./apps/notifications/.env
  mongo:
    image: mongo